name: Docker Build

on:
  push:
    branches: [main]
    paths: ['Dockerfile']  # 精确匹配Dockerfile变更[6]
  workflow_dispatch:

env:
  REGISTRY: docker.io  # 显式声明registry地址[7]
  IMAGE_NAME: fskemp/ubuntu-ros1
  CACHE_KEY: ${{ github.run_id }}  # 改用run_id保证唯一性[1]

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 配置Buildx增强缓存支持[5]
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          driver-opts: |
            network=host
            image=moby/buildkit:master

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}  # 显式指定registry[7]
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 新增缓存目录创建步骤[2]
      - name: Prepare cache directories
        run: |
          mkdir -p /tmp/.buildx-cache
          sudo chmod -R 777 /tmp/.buildx-cache

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          provenance: false  # 禁用provenance减少认证冲突[4]

      # 新增缓存清理步骤[3]
      - name: Cleanup cache
        if: always()
        run: |
          rm -rf /tmp/.buildx-cache
